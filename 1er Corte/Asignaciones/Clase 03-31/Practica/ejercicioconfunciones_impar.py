def obtener_impares(n):
    """Genera una lista de n칰meros impares hasta n."""
    return [i for i in range(1, n + 1, 2)]

def suma_impares(numeros):
    """Calcula la suma de los n칰meros impares en la lista."""
    return sum(numeros)


def producto_impares(numeros):
    """Calcula el producto de los n칰meros impares en la lista."""
    producto = 1
    for num in numeros:
        producto *= num
    return producto


def main():
    while True:
        print("\nMen칰 de opciones:")
        print("1. Introducir un valor entero impar entre 1 y 19")
        print("2. Calcular la suma de la serie 1 + 3 + 5 + ... + n")
        print("3. Calcular el producto de la serie 1 * 3 * 5 * ... * n")
        print("4. Salir del programa")

        opcion = input("Seleccione una opci칩n (1-4): ")

        if opcion == '1':
            try:
                n = int(input("Ingrese un n칰mero impar entre 1 y 19: "))
                if n < 1 or n > 19 or n % 2 == 0:
                    print("丘멆잺 Debe ser un n칰mero impar entre 1 y 19.")
                else:
                    print(f"N칰mero guardado: {n}")
            except ValueError:
                print("丘멆잺 Entrada no v치lida. Debe ser un n칰mero entero.")

        elif opcion == '2':
            if 'n' in locals():
                impares = obtener_impares(n)
                print(f"Suma de la serie: {suma_impares(impares)}")
            else:
                print("丘멆잺 Primero debe ingresar un n칰mero v치lido en la opci칩n 1.")

        elif opcion == '3':
            if 'n' in locals():
                impares = obtener_impares(n)
                print(f"Producto de la serie: {producto_impares(impares)}")
            else:
                print("丘멆잺 Primero debe ingresar un n칰mero v치lido en la opci칩n 1.")

        elif opcion == '4':
            print("Saliendo del programa... 游녦")
            break

        else:
            print("丘멆잺 Opci칩n inv치lida. Intente de nuevo.")


if __name__ == "__main__":
    main()
